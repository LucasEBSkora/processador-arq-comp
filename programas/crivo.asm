//[DECLARE ARRAY "A" OF SIZE 32]


//[ASSIGN A AT INDEX 0 TO VALUE 2]
LD A,#$2 //B"011_00_1_000000010"
LD $0,A //B"011_01_0_000000000"

//[DECLARE currentIndex WITH INITIAL VALUE 1]
LD A,#$1 //B"011_00_1_000000001"
LD $32,A //B"011_01_0_000100000"

//[DECLARE candidate WITH INITIAL VALUE 3]
LD A,#$3 //B"011_00_1_000000011"
LD $33,A //B"011_01_0_000100001"

//[DECLARE comparingWith]


//[DECLARE partial]


//[DECLARE prime]


/*[WHILE (currentIndex 32 <) DO:
	[ASSIGN comparingWith TO VALUE (currentIndex 1 -)]
	[WHILE (comparingWith 0 >=) DO:
	[ASSIGN partial TO VALUE candidate]
	[ASSIGN prime TO VALUE A[comparingWith]]
	[WHILE (partial 0 >) DO:
	[ASSIGN partial TO VALUE (partial prime -)]
]
	[IF (partial 0 ==) THEN:
	[ASSIGN comparingWith TO VALUE -1]
]
	[ASSIGN comparingWith TO VALUE (comparingWith 1 -)]
]
	[IF (comparingWith -1 ==) THEN:
	[ASSIGN A AT INDEX currentIndex TO VALUE candidate]
	[ASSIGN currentIndex TO VALUE (currentIndex 1 +)]
]
	[ASSIGN candidate TO VALUE (candidate 1 +)]
]*/
LD A,$32 //B"011_01_1_000100000"
CP A,#$32 //B"111_00_0000100000"
JRSGE $44 //B"101_0111_00101100"
//[ASSIGN comparingWith TO VALUE (currentIndex 1 -)]
LD A,$32 //B"011_01_1_000100000"
SUB A,#$1 //B"010_00_0000000001"
LD $34,A //B"011_01_0_000100010"
/*[WHILE (comparingWith 0 >=) DO:
	[ASSIGN partial TO VALUE candidate]
	[ASSIGN prime TO VALUE A[comparingWith]]
	[WHILE (partial 0 >) DO:
	[ASSIGN partial TO VALUE (partial prime -)]
]
	[IF (partial 0 ==) THEN:
	[ASSIGN comparingWith TO VALUE -1]
]
	[ASSIGN comparingWith TO VALUE (comparingWith 1 -)]
]*/
LD A,$34 //B"011_01_1_000100010"
CP A,#$0 //B"111_00_0000000000"
JRSLT $24 //B"101_1010_00011000"
//[ASSIGN partial TO VALUE candidate]
LD A,$33 //B"011_01_1_000100001"
LD $35,A //B"011_01_0_000100011"
//[ASSIGN prime TO VALUE A[comparingWith]]
LD A,#$0 //B"011_00_1_000000000"
ADD A,$34 //B"001_01_0000100010"
LD X,A //B"011_10_0_000000000"
LD A,(X) //B"011_10_1_000000001"
LD $36,A //B"011_01_0_000100100"
/*[WHILE (partial 0 >) DO:
	[ASSIGN partial TO VALUE (partial prime -)]
]*/
LD A,$35 //B"011_01_1_000100011"
CP A,#$0 //B"111_00_0000000000"
JRSLE $5 //B"101_1001_00000101"
//[ASSIGN partial TO VALUE (partial prime -)]
LD A,$35 //B"011_01_1_000100011"
SUB A,$36 //B"010_01_0000100100"
LD $35,A //B"011_01_0_000100011"
JP $22 //B"110_000000010110"
/*[IF (partial 0 ==) THEN:
	[ASSIGN comparingWith TO VALUE -1]
]*/
LD A,$35 //B"011_01_1_000100011"
CP A,#$0 //B"111_00_0000000000"
JRNE $3 //B"101_0100_00000011"

//[ASSIGN comparingWith TO VALUE -1]
LD A,#$-1 //B"011_00_1_111111111"
LD $34,A //B"011_01_0_000100010"
//[ASSIGN comparingWith TO VALUE (comparingWith 1 -)]
LD A,$34 //B"011_01_1_000100010"
SUB A,#$1 //B"010_00_0000000001"
LD $34,A //B"011_01_0_000100010"
JP $12 //B"110_000000001100"
/*[IF (comparingWith -1 ==) THEN:
	[ASSIGN A AT INDEX currentIndex TO VALUE candidate]
	[ASSIGN currentIndex TO VALUE (currentIndex 1 +)]
]*/
LD A,$34 //B"011_01_1_000100010"
CP A,#$-1 //B"111_00_1111111111"
JRNE $8 //B"101_0100_00001000"

//[ASSIGN A AT INDEX currentIndex TO VALUE candidate]
LD A,$32 //B"011_01_1_000100000"
LD Y,A //B"011_11_0_000000000"
LD A,$33 //B"011_01_1_000100001"
LD (Y),A //B"011_11_0_000000001"

//[ASSIGN currentIndex TO VALUE (currentIndex 1 +)]
LD A,$32 //B"011_01_1_000100000"
ADD A,#$1 //B"001_00_0000000001"
LD $32,A //B"011_01_0_000100000"
//[ASSIGN candidate TO VALUE (candidate 1 +)]
LD A,$33 //B"011_01_1_000100001"
ADD A,#$1 //B"001_00_0000000001"
LD $33,A //B"011_01_0_000100001"
JP $6 //B"110_000000000110"

which would be translated to:
0 => B"011_00_1_000000010",
1 => B"011_01_0_000000000",
2 => B"011_00_1_000000001",
3 => B"011_01_0_000100000",
4 => B"011_00_1_000000011",
5 => B"011_01_0_000100001",
6 => B"011_01_1_000100000",
7 => B"111_00_0000100000",
8 => B"101_0111_00101100",
9 => B"011_01_1_000100000",
10 => B"010_00_0000000001",
11 => B"011_01_0_000100010",
12 => B"011_01_1_000100010",
13 => B"111_00_0000000000",
14 => B"101_1010_00011000",
15 => B"011_01_1_000100001",
16 => B"011_01_0_000100011",
17 => B"011_00_1_000000000",
18 => B"001_01_0000100010",
19 => B"011_10_0_000000000",
20 => B"011_10_1_000000001",
21 => B"011_01_0_000100100",
22 => B"011_01_1_000100011",
23 => B"111_00_0000000000",
24 => B"101_1001_00000101",
25 => B"011_01_1_000100011",
26 => B"010_01_0000100100",
27 => B"011_01_0_000100011",
28 => B"110_000000010110",
29 => B"011_01_1_000100011",
30 => B"111_00_0000000000",
31 => B"101_0100_00000011",
32 => B"011_00_1_111111111",
33 => B"011_01_0_000100010",
34 => B"011_01_1_000100010",
35 => B"010_00_0000000001",
36 => B"011_01_0_000100010",
37 => B"110_000000001100",
38 => B"011_01_1_000100010",
39 => B"111_00_1111111111",
40 => B"101_0100_00001000",
41 => B"011_01_1_000100000",
42 => B"011_11_0_000000000",
43 => B"011_01_1_000100001",
44 => B"011_11_0_000000001",
45 => B"011_01_1_000100000",
46 => B"001_00_0000000001",
47 => B"011_01_0_000100000",
48 => B"011_01_1_000100001",
49 => B"001_00_0000000001",
50 => B"011_01_0_000100001",
51 => B"110_000000000110",
